<project name="build" default="build"  xmlns:ivy="antlib:org.apache.ivy.ant">
  <description>
  Provides a sensor for the Emacs IDE that records DevEvent event data.
  </description>

  <!-- Basic directory structure. -->
  <property name="src.dir" location="${basedir}/src" />
  <property name="lib.dir" location="${basedir}/lib" />
  <property name="build.dir" location="${basedir}/build" />

  <!-- Make sure we're running a Java 5 or better. -->
  <condition property="java.5.available">
    <or>
      <contains string="${java.version}" substring="1.5" />
      <contains string="${java.version}" substring="1.6" />
    </or>
  </condition>
  <fail message="This package requires Java 5 or 6." unless="java.5.available" />

  <!-- Make sure we're running Ant 1.7 . -->
  <condition property="ant.1.7.available">
    <contains string="${ant.version}" substring="1.7" />
  </condition>
  <fail message="This package requires Ant 1.7." unless="ant.1.7.available" />

  <!-- Make sure Ivy is installed. -->
  <import file="ivy.build.xml" />
  <available file="${ivy.jar.path}/ivy.jar" type="file" property="ivy.available" />
  <fail message="This package requires Ivy.  To install, invoke 'ant -f ivy.build.xml'." unless="ivy.available" />
  <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpath="${ivy.jar.path}/ivy.jar" />

  <!-- Make sure library.versions.properties is installed, which provides all library version numbers. -->
  <property name="library.versions.path" location="${user.home}/.hackystat/library.versions.properties" />
  <available file="${library.versions.path}" type="file" property="library.versions.available" />
  <fail message="This package requires ~/.hackystat/library.versions.properties.  To install, invoke 'ant -f ivy.build.xml'." unless="library.versions.available" />
  <!-- Now load all library version numbers. -->
  <property file="${library.versions.path}" />

  <!-- Where to look for configuration files (Checkstyle, PMD, FindBugs, etc.) -->
  <property name="configfiles.url" value="http://hackystat.googlecode.com/svn/trunk/configfiles/" />
  <property name="configfiles.dir" location="${lib.dir}/configfiles" />
  <mkdir dir="${configfiles.dir}" />

  <ivy:retrieve organisation="org.hackystat" module="hackystat-sensor-shell" revision="latest.integration" pattern="${lib.dir}/hackystat-sensor-shell/[artifact].[ext]" sync="true" inline="true" conf="default" log="download-only" transitive="false" type="jar" />
  <path id="hackystat-sensor-shell.path" location="${lib.dir}/hackystat-sensor-shell/sensorshell.jar" />
 
  <!-- Basic properties for this system. -->
  <property name="system.name" value="hackystat-sensor-emacs" />
  <property name="majorVersionNumber" value="8" />
  <property name="minorVersionNumber" value="x" />
  <tstamp>
    <format property="DAYSTAMP" pattern="Mdd" />
  </tstamp>
  <property name="version" value="${majorVersionNumber}.${minorVersionNumber}.${DAYSTAMP}" />


  <target name="clean" description="Delete build/ directory and top-level jar files.">
    <delete>
      <fileset dir="${basedir}" includes="*.jar"/> 
    </delete>
    <delete dir="${build.dir}"/> 
  </target>

  <target name="convertLineEndings" description="Makes line endings compatible with host platform.">
    <fixcrlf srcdir="${basedir}" includes="*.build.xml"/>
  </target>

  <target name="build">  	
    <filter token="hackystat.version" value="${version}"/>
  
    <copy file="${src.dir}/sensor-utils.el" tofile="${src.dir}/sensor-utils-filtered.el" filtering="on" overwrite="on"/>
    
    <mkdir dir="${build.dir}" />
    <concat destfile="${build.dir}/sensor-package.el">
      <filelist dir="${src.dir}"
                files="sensor-utils-filtered.el,sensor-properties.el,sensorshell.el,devevent-sensor.el,bufftrans-sensor.el, sensor-hooks.el"/>
    </concat>
    <!-- Get rid of the temp file created with the version info embedded. -->
    <delete file="${src.dir}/sensor-utils.filtered.el"/>
  </target>



</project>

